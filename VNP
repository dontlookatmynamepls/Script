-- ================= WINDUI BOILERPLATE (bỏ qua nếu đã có) =================
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

WindUI:SetNotificationLower(true)
WindUI:SetTheme("Dark")

local Window = WindUI:CreateWindow({
    Title = "Lộc Hub|Viet Nam Piece",
    Icon = "rbxassetid://116721573962136",
    Author = "discord link:...",
    Folder = "lochub",
    Size = UDim2.fromOffset(680, 340),
    Transparent = false,
    Theme = "Dark",
    SideBarWidth = 150,
    Background = "",
    BackgroundImageTransparency = 0.42,
    HideSearchBar = false,
    ScrollBarEnabled = true,
})

local Tab1 = Window:Tab({
    Title = "Main",
    Icon = "house",
})
-- =======================================================================

-- Services
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

-- ===========================
-- AUTO QUEST (Sea 2)
-- ===========================
local isRunning = false
local selectedQuest = nil

local function safeGet(pathFunc)
    local ok, res = pcall(pathFunc)
    if ok then return res end
    return nil
end

local questRemotes = {
    ["Quest1"] = safeGet(function() return workspace.NPCS.Quest1.ClickPart.QuestTake.QuestTake.Accept1.RemoteEvent end),
    ["Quest2"] = safeGet(function() return workspace.NPCS.Quest2.ClickPart.QuestTake.QuestTake.Accept1.RemoteEvent end),
    ["Quest3"] = safeGet(function() return workspace.NPCS.Quest3.ClickPart.QuestTake.QuestTake.Accept1.RemoteEvent end),
    ["Quest4"] = safeGet(function() return workspace.NPCS.Quest4.ClickPart.QuestTake.QuestTake.Accept1.RemoteEvent end),

    ["Quest5"] = safeGet(function() return workspace.NPCS.Quest5.ClickPart.QuestTake.QuestTake.Accept2.RemoteEvent end),
    ["Quest6"] = safeGet(function() return workspace.NPCS.Quest6.ClickPart.QuestTake.QuestTake.Accept2.RemoteEvent end),
    ["Quest7"] = safeGet(function() return workspace.NPCS.Quest7.ClickPart.QuestTake.QuestTake.Accept2.RemoteEvent end),
    ["Quest8"] = safeGet(function() return workspace.NPCS.Quest8.ClickPart.QuestTake.QuestTake.Accept2.RemoteEvent end),

    ["Quest9"] = safeGet(function() return workspace.NPCS.Quest9.ClickPart.QuestTake.QuestTake.Accept3.RemoteEvent end)
}

local questList = {
    "Quest1","Quest2","Quest3","Quest4",
    "Quest5","Quest6","Quest7","Quest8",
    "Quest9"
}

local function performQuest(questName)
    local remote = questRemotes[questName]
    if remote then
        pcall(function() remote:FireServer() end)
    else
        -- fallback nhẹ: tìm remote có tên accept (phòng trường hợp cấu trúc khác)
        pcall(function()
            for _, obj in ipairs(game:GetDescendants()) do
                if obj:IsA("RemoteEvent") and tostring(obj.Name):lower():find("accept") then
                    pcall(function() obj:FireServer() end)
                end
            end
        end)
    end
end

local function startAutoQuest()
    if isRunning then return end
    if not selectedQuest then
        warn("Chưa chọn quest.")
        return
    end
    isRunning = true
    task.spawn(function()
        while isRunning do
            performQuest(selectedQuest)
            task.wait(0.5) -- tránh spam quá dày
        end
    end)
end

local function stopAutoQuest()
    isRunning = false
end

-- UI: Quest Dropdown + Toggle
Tab1:Dropdown({
    Title = "Auto Quest (Sea 2) - Chọn quest",
    Values = questList,
    Value = questList[1],
    Multi = false,
    AllowNone = true,
    Callback = function(option)
        local chosen = type(option) == "table" and option[1] or option
        selectedQuest = chosen ~= "" and chosen or nil
        print("Selected quest: " .. HttpService:JSONEncode(option))
    end
})

Tab1:Toggle({
    Title = "Auto Take Quest",
    Desc = "Bật/tắt nhận quest liên tục",
    Icon = "bird",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        if state then startAutoQuest() else stopAutoQuest() end
    end
})

-- ===========================
-- AUTO SPINER (Sniper Combat)
-- ===========================
local autoSpinerRunning = false

local function findSniperFire()
    local tool = lp:FindFirstChildOfClass("Backpack") and lp.Backpack:FindFirstChild("Sniper Combat") or nil
    if not tool and lp.Character then
        tool = lp.Character:FindFirstChild("Sniper Combat")
    end
    if tool then
        local zScript = tool:FindFirstChild("Z", true)
        if zScript then
            -- ưu tiên tìm Fire trong Z script
            for _, d in ipairs(zScript:GetDescendants()) do
                if d:IsA("RemoteEvent") and d.Name == "Fire" then
                    return d
                end
            end
            -- fallback: tìm Fire trong tool
            for _, d in ipairs(tool:GetDescendants()) do
                if d:IsA("RemoteEvent") and d.Name == "Fire" then
                    return d
                end
            end
        end
    end
    return nil
end

local function spinerLoop()
    task.spawn(function()
        local foundOnce = false
        while autoSpinerRunning do
            local remote = findSniperFire()
            if remote then
                if not foundOnce then
                    print("Auto Spiner: Đã tìm thấy remote, bắt đầu bắn...")
                    foundOnce = true
                end
                pcall(function() remote:FireServer() end)
            else
                if foundOnce then
                    print("Auto Spiner: remote bị mất, dừng tạm.")
                end
                foundOnce = false
            end
            task.wait(0.12)
        end
    end)
end

local function startSpiner()
    if autoSpinerRunning then return end
    autoSpinerRunning = true
    spinerLoop()
end

local function stopSpiner()
    autoSpinerRunning = false
end

Tab1:Toggle({
    Title = "Auto Spiner",
    Desc = "Liên tục bắn remote Z.Fire của Sniper Combat",
    Icon = "zap",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        if state then startSpiner() else stopSpiner() end
    end
})

-- ===========================
-- TOOL / SKILL DROPDOWN + BUTTONS (ZXCVBN) + Refresh bằng API nếu có
-- ===========================

-- Quét tool từ tất cả players (Backpack + Character), trả về tên tool duy nhất (sorted)
local function scanPlayerTools()
    local seen = {}
    local list = {}
    for _, pl in ipairs(Players:GetPlayers()) do
        local bp = pl:FindFirstChildOfClass("Backpack")
        if bp then
            for _, t in ipairs(bp:GetChildren()) do
                if t:IsA("Tool") and not seen[t.Name] then
                    seen[t.Name] = true
                    table.insert(list, t.Name)
                end
            end
        end
        local char = pl.Character
        if char then
            for _, t in ipairs(char:GetChildren()) do
                if t:IsA("Tool") and not seen[t.Name] then
                    seen[t.Name] = true
                    table.insert(list, t.Name)
                end
            end
        end
    end
    table.sort(list)
    return list
end

-- Tìm 1 instance Tool theo tên trong toàn game (first found)
local function findToolInstanceByName(toolName)
    for _, obj in ipairs(game:GetDescendants()) do
        if obj:IsA("Tool") and obj.Name == toolName then
            return obj
        end
    end
    return nil
end

-- Trong 1 tool instance, tìm RemoteEvent "Fire" liên quan đến LocalScript skillName (ưu tiên)
local function findFireRemoteInTool(toolInstance, skillName)
    if not toolInstance then return nil end

    -- 1) Tìm LocalScript tên skillName trong tool (đệ quy)
    for _, d in ipairs(toolInstance:GetDescendants()) do
        if d:IsA("LocalScript") and d.Name == skillName then
            -- Trong tool, tìm RemoteEvent "Fire"
            for _, sub in ipairs(toolInstance:GetDescendants()) do
                if sub:IsA("RemoteEvent") and sub.Name == "Fire" then
                    return sub
                end
            end
            break
        end
    end

    -- 2) Fallback: tìm RemoteEvent "Fire" bất kỳ trong tool
    for _, d in ipairs(toolInstance:GetDescendants()) do
        if d:IsA("RemoteEvent") and d.Name == "Fire" then
            return d
        end
    end

    return nil
end

-- Hàm thực hiện kích hoạt skill 1 lần
local function activateSelectedToolSkill(toolName, skillKey)
    if not toolName or toolName == "" then
        warn("Chưa chọn tool.")
        return
    end

    local toolInstance = findToolInstanceByName(toolName)
    if not toolInstance then
        warn("Không tìm thấy tool instance cho: " .. tostring(toolName))
        return
    end

    local remote = findFireRemoteInTool(toolInstance, skillKey)
    if remote and remote:IsA("RemoteEvent") then
        local ok, err = pcall(function() remote:FireServer() end)
        if ok then
            print(("Activated %s -> %s"):format(toolName, skillKey))
        else
            warn("FireServer failed:", err)
        end
    else
        warn(("Không tìm thấy RemoteEvent 'Fire' cho %s (skill %s)"):format(toolName, skillKey))
    end
end

-- Tạo UI: dropdown 1 lần (giữ tham chiếu ToolDropdown) rồi refresh bằng API nếu có
local initialTools = scanPlayerTools()
if #initialTools == 0 then initialTools = {"(No tools found)"} end

local selectedToolName = initialTools[1] ~= "(No tools found)" and initialTools[1] or nil

local ToolDropdown = Tab1:Dropdown({
    Title = "Select Tool (Players)",
    Values = initialTools,
    Value = initialTools[1],
    Multi = false,
    AllowNone = true,
    Callback = function(option)
        local chosen = type(option) == "table" and option[1] or option
        if chosen == "(No tools found)" then
            selectedToolName = nil
        else
            selectedToolName = chosen ~= "" and chosen or nil
        end
        print("Selected tool:", selectedToolName)
    end
})

-- Nút Refresh: nếu ToolDropdown:Refresh tồn tại thì dùng, nếu không fallback recreate
Tab1:Button({
    Title = "Refresh Tool List",
    Desc = "Quét lại tools từ tất cả players (dùng ToolDropdown:Refresh nếu có)",
    Locked = false,
    Callback = function()
        local newList = scanPlayerTools()
        if #newList == 0 then newList = {"(No tools found)"} end

        if ToolDropdown and type(ToolDropdown.Refresh) == "function" then
            -- Dùng Refresh API
            pcall(function() ToolDropdown:Refresh(newList) end)
            -- Thử set selection về đầu nếu có API phù hợp
            if newList[1] and newList[1] ~= "(No tools found)" then
                selectedToolName = newList[1]
                if type(ToolDropdown.Select) == "function" then
                    pcall(function() ToolDropdown:Select(newList[1]) end)
                elseif type(ToolDropdown.SetValue) == "function" then
                    pcall(function() ToolDropdown:SetValue(newList[1]) end)
                end
            else
                selectedToolName = nil
            end
            print("Tool list refreshed (via ToolDropdown:Refresh) — items:", #newList)
        else
            -- Fallback: tạo dropdown mới
            Tab1:Dropdown({
                Title = "Select Tool (Players) [Refreshed](ko hoạt động!)",
                Values = newList,
                Value = newList[1],
                Multi = false,
                AllowNone = true,
                Callback = function(option)
                    local chosen = type(option) == "table" and option[1] or option
                    selectedToolName = (chosen == "(No tools found)") and nil or (chosen ~= "" and chosen or nil)
                    print("Selected tool:", selectedToolName)
                end
            })
            print("Tool list refreshed (recreated dropdown) — items:", #newList)
        end
    end
})

-- Tạo nút ZXCVBN
local keys = {"Z","X","C","V","B","N"}
for _, k in ipairs(keys) do
    Tab1:Button({
        Title = "Use Skill " .. k,
        Desc = "Kích hoạt skill " .. k .. " của tool đã chọn",
        Locked = false,
        Callback = (function(key)
            return function()
                activateSelectedToolSkill(selectedToolName, key)
            end
        end)(k)
    })
end

-- ===========================
-- END OF SCRIPT
-- ===========================

local Button = Tab1:Button({
    Title = "level giả",
    Desc = "chỉ là 1 cái nút",
    Locked = false,
    Callback = function()
local player = game.Players.LocalPlayer
    local data = player:FindFirstChild("Data")
    if data then
        local levels = data:FindFirstChild("Levels")
        if levels then
            levels.Value = tonumber(math.huge)
        end
    end
        print("clicked")
    end
})

local Button = Tab1:Button({
    Title = "dupe tiền giả(ko giống như của ai đó🤔)",
    Desc = "chỉ là 1 cái nút",
    Locked = false,
    Callback = function()
local player = game.Players.LocalPlayer
    local data = player:FindFirstChild("Data")
    if data then
        local belis = data:FindFirstChild("Belis")
        if belis then
            belis.Value = tonumber(math.huge)
        end
    end
        print("clicked")
    end
})

local Button = Tab1:Button({
    Title = "buff máu",
    Desc = "spam mỗi vài giây,chục giây sẽ được buff nhiều máu",
    Locked = false,
    Callback = function()
local Players = game:GetService("Players")
local armors = {"Cursed-Armor", "Unique-Armor", "Darkness-Armor", "Thunder-Armor", "Thunder-Armor", "Diamond-Armor", "Golden-Armor", "Epic-Armor", "Iron-Armor", "Wooden-Armor"} -- Danh sách các loại giáp

for _, player in pairs(Players:GetPlayers()) do
    local backpack = player:FindFirstChild("Backpack")
    if backpack then
        for _, armorName in pairs(armors) do
            local armor = backpack:FindFirstChild(armorName)
            if armor and armor:FindFirstChild("K") and armor.K:FindFirstChild("Fire") then
                armor.K.Fire:FireServer()
            end
        end
    end
end
        print("clicked")
    end
})

local Button = Tab1:Button({
    Title = "Random Secret(sea 1)",
    Desc = "chỉ là 1 cái nút",
    Locked = false,
    Callback = function()
for i = 1, 100000 do
fireclickdetector(game:GetService("Workspace").MAP["STARTER ISLAND [ Lv 1+ ]"]["Secret Random"].RANDOM)
end
        print("clicked")
    end
})

local Button = Tab1:Button({
    Title = "farm tiền(sea 1)",
    Desc = "chỉ là 1 cái nút",
    Locked = false,
    Callback = function()
for i = 1, 100000 do
fireclickdetector(workspace.MAP["Event Island"].EventBox.ClickDetector)
end
        print("clicked")
    end
})
